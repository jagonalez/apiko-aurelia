{"version":3,"sources":["app.js","environment.js","main.js","resources/bootstrap-form-render.js","resources/index.js","services/api.js","routes/login/login.js","routes/register/register.js","resources/bootstrap-form-renderer.js","resources/binding-behaviors/bootstrap-form-render.js","services/account.js","routes/home/home.js","routes/users/users.js"],"names":["App","account","configureRouter","config","router","addAuthorizeStep","AuthorizeStep","map","route","name","moduleId","title","nav","auth","activate","checkLogin","logout","run","navigationInstruction","next","getAllInstructions","some","i","isAuthenticated","cancel","debug","testing","configure","Promise","warnings","wForgottenReturn","aurelia","use","standardConfiguration","plugin","globalResources","feature","developmentLogging","start","then","setRoot","BootstrapFormRenderer","render","instruction","unrender","result","elements","element","remove","add","valid","formGroup","closest","classList","message","document","createElement","className","textContent","id","appendChild","querySelector","removeChild","querySelectorAll","length","ApiService","http","baseUrl","useStandardConfiguration","withBaseUrl","get","url","fetch","post","body","method","put","delete","Login","controllerFactory","email","password","alert","alertMessage","alertType","controller","createForCurrentScope","addRenderer","params","routeConfig","login","catch","console","log","error","stauts","status","ensure","a","required","on","Register","register","validate","response","matches","withMessage","AccountService","api","token","withInterceptor","request","req","Request","headers","credentials","cache","redirect","integrity","navigateToRoute","username","json","data","user","checkUserExists","r","exists","createAccount","role","reject","Error","Home","Users","users"],"mappings":"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","file":"app-bundle.js","sourcesContent":["import { inject } from \"aurelia-dependency-injection\";\nimport { AccountService } from \"services/account\";\nimport { Redirect } from \"aurelia-router\";\n\n@inject(AccountService)\nexport class App {\n  constructor(account) {\n    this.account = account;\n  }\n  configureRouter(config, router) {\n    config.addAuthorizeStep(AuthorizeStep);\n    config.map([\n      {route: ['', 'home'], name: 'home', moduleId: 'routes/home/home', title: 'Home', nav: true, auth: true},\n      {route: 'login', name: 'login', moduleId: 'routes/login/login', title: 'Login'},\n      {route: 'register', name: 'register', moduleId: 'routes/register/register', title: 'Register'},\n      {route: 'users', name: 'users', moduleId: 'routes/users/users', title: 'Users', auth: true, nav: true}\n    ]);\n    router.title = \"Apiko Aurelia App\"\n    this.router = router;\n  }\n  activate() {\n    return this.account.checkLogin();\n  }\n  logout() {\n    return this.account.logout();\n  }\n}\n@inject(AccountService)\nexport class AuthorizeStep {\n  constructor(account) {\n    this.account = account;\n  }\n\n  run(navigationInstruction, next) {\n    if (navigationInstruction.getAllInstructions().some(i => i.config.auth)) {\n      if (this.account.isAuthenticated) {\n        return next();\n      }\n      return next.cancel(new Redirect('login'));\n    }\n    return next();\n  }\n}\n","export default {\n  debug: true,\n  testing: true\n};\n","import environment from './environment';\n\n//Configure Bluebird Promises.\nPromise.config({\n  warnings: {\n    wForgottenReturn: false\n  }\n});\n\nexport function configure(aurelia) {\n  aurelia.use\n    .standardConfiguration()\n    .plugin('aurelia-validation')\n    .globalResources('bootstrap/css/bootstrap.css')\n    .feature('resources');\n\n  if (environment.debug) {\n    aurelia.use.developmentLogging();\n  }\n\n  if (environment.testing) {\n    aurelia.use.plugin('aurelia-testing');\n  }\n\n  aurelia.start().then(() => aurelia.setRoot());\n}\n","import { ValidationRenderer, RenderInstruction, ValidateResult } from 'aurelia-validation';\r\n\r\nexport class BootstrapFormRenderer {\r\n  render(instruction: RenderInstruction) {\r\n    for (let { result, elements } of instruction.unrender) {\r\n      for (let element of elements) {\r\n        this.remove(element, result);\r\n      }\r\n    }\r\n\r\n    for (let { result, elements } of instruction.render) {\r\n      for (let element of elements) {\r\n        this.add(element, result);\r\n      }\r\n    }\r\n  }\r\n\r\n  add(element: Element, result: ValidateResult) {\r\n    if (result.valid) {\r\n      return;\r\n    }\r\n\r\n    const formGroup = element.closest('.form-group');\r\n    if (!formGroup) {\r\n      return;\r\n    }\r\n\r\n    // add the has-error class to the enclosing form-group div\r\n    formGroup.classList.add('has-error');\r\n\r\n    // add help-block\r\n    const message = document.createElement('span');\r\n    message.className = 'help-block validation-message';\r\n    message.textContent = result.message;\r\n    message.id = `validation-message-${result.id}`;\r\n    formGroup.appendChild(message);\r\n  }\r\n\r\n  remove(element: Element, result: ValidateResult) {\r\n    if (result.valid) {\r\n      return;\r\n    }\r\n\r\n    const formGroup = element.closest('.form-group');\r\n    if (!formGroup) {\r\n      return;\r\n    }\r\n\r\n    // remove help-block\r\n    const message = formGroup.querySelector(`#validation-message-${result.id}`);\r\n    if (message) {\r\n      formGroup.removeChild(message);\r\n\r\n      // remove the has-error class from the enclosing form-group div\r\n      if (formGroup.querySelectorAll('.help-block.validation-message').length === 0) {\r\n        formGroup.classList.remove('has-error');\r\n      }\r\n    }\r\n  }\r\n}\r\n","export function configure(config) {\n  //config.globalResources([]);\n}\n","import { HttpClient, json } from \"aurelia-fetch-client\";\r\nimport { inject } from \"aurelia-dependency-injection\";\r\n\r\n@inject(HttpClient)\r\nexport class ApiService {\r\n  constructor(http) {\r\n    this.http = http;\r\n    this.baseUrl = \"http://localhost:5000/\";\r\n    this.http.configure(config => {\r\n      config\r\n      .useStandardConfiguration()\r\n      .withBaseUrl(this.baseUrl)\r\n    });\r\n  }\r\n\r\n  get(url) {\r\n    return this.http.fetch(url)\r\n  }\r\n\r\n  post(url, body) {\r\n    return this.http.fetch(url, {\r\n      method: \"POST\",\r\n      body: json(body)\r\n    })\r\n  }\r\n\r\n  put(url, body) {\r\n    return this.http.fetch(url, {\r\n      method: \"POST\",\r\n      body: json(body)\r\n    })\r\n  }\r\n\r\n  delete(url) {\r\n    return this.http.fetch(url, {\r\n      method: \"DELETE\"\r\n    })\r\n  }\r\n\r\n}\r\n","import { AccountService } from \"services/account\";\r\nimport { inject } from \"aurelia-dependency-injection\";\r\nimport { ValidationControllerFactory, ValidationController, ValidationRules } from 'aurelia-validation';\r\nimport { BootstrapFormRenderer } from 'resources/bootstrap-form-renderer';\r\n\r\n@inject(AccountService, ValidationControllerFactory)\r\nexport class Login {\r\n  email = \"\";\r\n  password = \"\";\r\n  alert = false;\r\n  alertMessage = \"\";\r\n  alertType = \"\";\r\n\r\n  constructor(account, controllerFactory) {\r\n    this.account = account;\r\n    this.controller = controllerFactory.createForCurrentScope();\r\n    this.controller.addRenderer(new BootstrapFormRenderer());\r\n  }\r\n  activate(params, routeConfig, navigationInstruction) {\r\n  }\r\n\r\n  login() {\r\n    this.account.login(this.email, this.password)\r\n    .catch(error => {\r\n      console.log(error);\r\n      if (error.stauts === 401 || error.status === 404 || error.status === 400) {\r\n        this.alert = true;\r\n        this.alertType = \"danger\";\r\n        this.alertMessage = \"The username/password is incorrect. Please try again.\"\r\n      } else {\r\n        this.alert = true;\r\n        this.alertType = \"danger\";\r\n        this.alertMessage = \"There was an issue logging in. Please try again.\"\r\n      }\r\n    })\r\n  }\r\n}\r\nValidationRules\r\n.ensure(a => a.email).required().email()\r\n.ensure(a => a.password).required()\r\n.on(Login)\r\n","import { AccountService } from \"services/account\";\r\nimport { inject } from \"aurelia-dependency-injection\";\r\nimport { ValidationControllerFactory, ValidationController, ValidationRules } from 'aurelia-validation';\r\nimport { BootstrapFormRenderer } from 'resources/bootstrap-form-renderer';\r\n\r\n@inject(AccountService, ValidationControllerFactory)\r\nexport class Register {\r\n  email = \"\";\r\n  password = \"\";\r\n  alert = false;\r\n  alertMessage = \"\";\r\n  alertType = \"\";\r\n\r\n  constructor(account, controllerFactory) {\r\n    this.account = account;\r\n    this.controller = controllerFactory.createForCurrentScope();\r\n    this.controller.addRenderer(new BootstrapFormRenderer());\r\n  }\r\n\r\n  register() {\r\n    this.controller.validate()\r\n    .then(response => {\r\n      if (response.valid) {\r\n        this.account.register(this.email, this.password)\r\n        .then(() => {\r\n          this.alert = true;\r\n          this.alertType = \"success\"\r\n          this.alertMessage= \"Your account has been successfully created. You can now login.\"\r\n        })\r\n        .catch(error => {\r\n          if (error.message === \"exists\") {\r\n            this.alert = true;\r\n            this.alertType = \"info\"\r\n            this.alertMessage = \"An account already exists for this user. Please try a different one.\"\r\n          } else {\r\n            this.alert = true;\r\n            this.alertType = \"danger\"\r\n            this.alertMessage = \"There was an Error registering your account. Please try again.\"\r\n          }\r\n        })\r\n      }\r\n    })\r\n  }\r\n}\r\nValidationRules\r\n.ensure(a => a.email).required().email()\r\n.ensure(a => a.password).required().matches(/^(?=.*[a-z])(?=.*[A-Z])(?=.*\\d).{8,18}$/).withMessage(\"Passwords need to be 8 to 18 characters and have 1 number, upper and lowercase character.\")\r\n.on(Register)\r\n","import { ValidationRenderer, RenderInstruction, ValidateResult } from 'aurelia-validation';\r\n\r\nexport class BootstrapFormRenderer {\r\n  render(instruction: RenderInstruction) {\r\n    for (let { result, elements } of instruction.unrender) {\r\n      for (let element of elements) {\r\n        this.remove(element, result);\r\n      }\r\n    }\r\n\r\n    for (let { result, elements } of instruction.render) {\r\n      for (let element of elements) {\r\n        this.add(element, result);\r\n      }\r\n    }\r\n  }\r\n\r\n  add(element: Element, result: ValidateResult) {\r\n    if (result.valid) {\r\n      return;\r\n    }\r\n\r\n    const formGroup = element.closest('.form-group');\r\n    if (!formGroup) {\r\n      return;\r\n    }\r\n\r\n    // add the has-error class to the enclosing form-group div\r\n    formGroup.classList.add('has-error');\r\n\r\n    // add help-block\r\n    const message = document.createElement('span');\r\n    message.className = 'help-block validation-message';\r\n    message.textContent = result.message;\r\n    message.id = `validation-message-${result.id}`;\r\n    formGroup.appendChild(message);\r\n  }\r\n\r\n  remove(element: Element, result: ValidateResult) {\r\n    if (result.valid) {\r\n      return;\r\n    }\r\n\r\n    const formGroup = element.closest('.form-group');\r\n    if (!formGroup) {\r\n      return;\r\n    }\r\n\r\n    // remove help-block\r\n    const message = formGroup.querySelector(`#validation-message-${result.id}`);\r\n    if (message) {\r\n      formGroup.removeChild(message);\r\n\r\n      // remove the has-error class from the enclosing form-group div\r\n      if (formGroup.querySelectorAll('.help-block.validation-message').length === 0) {\r\n        formGroup.classList.remove('has-error');\r\n      }\r\n    }\r\n  }\r\n}\r\n","import { ValidationRenderer, RenderInstruction, ValidateResult } from 'aurelia-validation';\r\n\r\nexport class BootstrapFormRenderer {\r\n  render(instruction: RenderInstruction) {\r\n    for (let { result, elements } of instruction.unrender) {\r\n      for (let element of elements) {\r\n        this.remove(element, result);\r\n      }\r\n    }\r\n\r\n    for (let { result, elements } of instruction.render) {\r\n      for (let element of elements) {\r\n        this.add(element, result);\r\n      }\r\n    }\r\n  }\r\n\r\n  add(element: Element, result: ValidateResult) {\r\n    if (result.valid) {\r\n      return;\r\n    }\r\n\r\n    const formGroup = element.closest('.form-group');\r\n    if (!formGroup) {\r\n      return;\r\n    }\r\n\r\n    // add the has-error class to the enclosing form-group div\r\n    formGroup.classList.add('has-error');\r\n\r\n    // add help-block\r\n    const message = document.createElement('span');\r\n    message.className = 'help-block validation-message';\r\n    message.textContent = result.message;\r\n    message.id = `validation-message-${result.id}`;\r\n    formGroup.appendChild(message);\r\n  }\r\n\r\n  remove(element: Element, result: ValidateResult) {\r\n    if (result.valid) {\r\n      return;\r\n    }\r\n\r\n    const formGroup = element.closest('.form-group');\r\n    if (!formGroup) {\r\n      return;\r\n    }\r\n\r\n    // remove help-block\r\n    const message = formGroup.querySelector(`#validation-message-${result.id}`);\r\n    if (message) {\r\n      formGroup.removeChild(message);\r\n\r\n      // remove the has-error class from the enclosing form-group div\r\n      if (formGroup.querySelectorAll('.help-block.validation-message').length === 0) {\r\n        formGroup.classList.remove('has-error');\r\n      }\r\n    }\r\n  }\r\n}\r\n","import { inject } from \"aurelia-dependency-injection\";\r\nimport { ApiService } from \"./api\"\r\nimport { Router } from \"aurelia-router\"\r\n\r\n@inject(ApiService, Router)\r\nexport class AccountService {\r\n  token = \"\";\r\n  isAuthenticated = false;\r\n\r\n  constructor(api, router) {\r\n    this.api = api;\r\n    this.router = router;\r\n    this.api.http.configure(config => {\r\n      config\r\n      .withInterceptor({\r\n        request: request => {\r\n          if (this.isAuthenticated) {\r\n            const req = new Request(request.url + \"?token=\" + this.token, {\r\n              method: request.method,\r\n              headers: request.headers,\r\n              body: request.body,\r\n              credentials: request.credentials,\r\n              cache: request.cache,\r\n              redirect: request.redirect,\r\n              integrity: request.integrity\r\n            })\r\n            request = req;\r\n          }\r\n          return request\r\n        }\r\n      });\r\n    })\r\n  }\r\n\r\n  logout() {\r\n    this.isAuthenticated = false;\r\n    this.router.navigateToRoute(\"login\");\r\n  }\r\n\r\n  checkLogin() {\r\n    return this.api.get(\"users/\")\r\n    .then(response => {\r\n      if (response.status === 200) {\r\n        this.isAuthenticated = true;\r\n      }\r\n      return response.status === 200\r\n    })\r\n    .catch(response => {\r\n      return false\r\n    })\r\n  }\r\n  login(username, password) {\r\n    this.isAuthenticated = false;\r\n    const credentials = {\r\n      username: username,\r\n      password: password,\r\n    }\r\n    return this.api.post(\"users/login\", credentials)\r\n    .then(response => {\r\n      if (response.status === 200)\r\n        return response.json();\r\n    })\r\n    .then(data => {\r\n      this.isAuthenticated = true;\r\n      this.token = data.token;\r\n      this.user = data.user;\r\n      this.router.navigateToRoute(\"home\")\r\n    })\r\n  }\r\n  checkUserExists(username) {\r\n    return this.api.get(\"users/exists/\" + username)\r\n    .then(r => r.json())\r\n    .then(data => {\r\n      return \"exists\" in data && data.exists\r\n    })\r\n  }\r\n\r\n  createAccount(username, password) {\r\n    const account = {\r\n      username: username,\r\n      password: password,\r\n      role: \"users\"\r\n    }\r\n    return this.api.post(\"users\", account)\r\n\r\n  }\r\n\r\n  register(username, password) {\r\n    return this.checkUserExists(username, password)\r\n    .then(exists => {\r\n      if (exists)\r\n        return Promise.reject(new Error(\"exists\"))\r\n      else\r\n        return this.createAccount(username, password)\r\n    })\r\n  }\r\n}\r\n","import { inject } from \"aurelia-dependency-injection\";\r\nimport { ApiService } from \"services/api\"\r\nimport { Router } from \"aurelia-router\"\r\n\r\n@inject(ApiService, Router)\r\nexport class Home {\r\n  constructor(api, router) {\r\n    this.router = router;\r\n    this.api = api;\r\n    api.get(\"users\")\r\n    .then(response => response.json())\r\n    .then(data => {\r\n      console.log(data)\r\n    })\r\n  }\r\n\r\n}\r\n","import { inject } from \"aurelia-dependency-injection\";\r\nimport { ApiService } from \"services/api\"\r\n\r\n\r\n@inject(ApiService)\r\nexport class Users {\r\n  constructor(api) {\r\n    this.api = api;\r\n  }\r\n  activate(params, routeConfig, navigationInstruction) {\r\n    return this.api.get(\"users\")\r\n    .then(r => r.json())\r\n    .then(users => this.users = users)\r\n    .catch(error => {\r\n      console.log(error)\r\n    })\r\n  }\r\n}\r\n"],"sourceRoot":".."}